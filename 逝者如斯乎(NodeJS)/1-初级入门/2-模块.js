/**
  开发过程中，随着程序代码越写越多，在一个文件里代码就会越来越长，越来越不容易维护。
  为了编写可维护的代码，我们把很多函数分组，分别放到不同的文件里，这样，每个文件包含
  的代码就相对较少，很多编程语言都采用这种组织代码的方式。在Node环境中，一个.js文件
  就称之为一个模块（module）
 */

 /**
  * 
  * 使用模块有什么好处？
  * 提高了代码的可维护性。其次，编写代码不必从零开始。当一个模块编写完毕，就可以被其
  * 他地方引用。我们在编写程序的时候，也经常引用其他模块，包括Node内置的模块和来自第
  * 三方的模块。
  * 
  * 模块还可以避免函数名和变量名冲突。相同名字的函数和变量完全可以分别存在不同的模块
  * 中，因此，我们自己在编写模块时，不必考虑名字会与其他模块冲突。
  */

  //总结：一个 Node.js 文件就是一个模块

  //使用
  /**
   * Node.js 提供了 exports 和 require 两个对象，其中 exports 是模块公开的接口，
   * 
   * require 用于从外部获取一个模块的接口，即所获取模块的 exports 对象。
   */