
//以下三种解构赋值不得使用圆括号

//（1）变量声明语句
// let [(a)] = [1];

// let {x: (c)} = {};
// let ({x: c}) = {};
// let {(x: c)} = {};
// let {(x): c} = {};

// let { o: ({ p: p }) } = { o: { p: 2 } };

//（2）函数参数 函数参数也属于变量声明，因此不能带有圆括号。类似于（1）
// // 报错
// function f([(z)]) { return z; }
// // 报错
// function f([z,(x)]) { return x; }

//（3）赋值语句的模式

// 全部报错  将   整个模式   放在圆括号之中，导致报错
// ({ p: a }) = { p: 42 };
// ([a]) = [5];

//  [({ p: a }), { x: c }] = [{}, {}]; //部分模式放在圆括号之中，导致报错




//可以使用圆括号的情况
//可以使用圆括号的情况只有一种：赋值语句的非模式部分，可以使用圆括号。
[(b)] = [3]; // 正确   
//等价于
  //【1】let { 0: b } = [3]
  //【2】[b] = [3]
  //【3】({ 0: (b) } = [3]) //0才是匹配模式，b只是变量
  
  ({ p: (d) } = {}); // 正确 ，p才是模式

[(parseInt.prop)] = [3]; // 正确 与上上条道理类似